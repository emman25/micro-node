version: '3.8'
services:
  consul:
    container_name: consul
    image: consul:1.15.4
    command: agent -dev -client=0.0.0.0
    ports:
      - "8500:8500"
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "consul", "members"]
      interval: 30s
      timeout: 10s
      retries: 5

    

  rabbitmq:
    container_name: rabbitmq
    image: rabbitmq:3.11-management
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: user
      RABBITMQ_DEFAULT_PASS: password
    volumes:
      - "rabbitmq_data:/var/lib/rabbitmq"
      - "rabbitmq_log:/var/log/rabbitmq"
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 30s
      timeout: 10s
      retries: 5


  mongo:
    container_name: mongo
    image: mongo:latest
    ports:
      - "27018:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: test
      MONGO_INITDB_ROOT_PASSWORD: 1234
    volumes:
      - "mongo_data:/data/db"
    restart: always
    networks:
      - app-network

  weather-service:
    build: './WeatherService'
    image: weather-service
    container_name: weather-service
    ports:
      - "3002:3002"
    networks:
      - app-network
    depends_on:
      - consul
      - rabbitmq
    restart: on-failure

  bike-service:
    build: './BikeService'
    image: bike-service
    container_name: bike-service
    ports:
      - "3001:3001"
    networks:
      - app-network
    depends_on:
      - consul
      - rabbitmq
    restart: on-failure

  data-aggregator-service:
    build: './DataAggregatorService'
    image: data-aggregator-service
    container_name: data-aggregator-service
    ports:
      - "3003:3003"
    networks:
      - app-network
    depends_on:
      - consul
      - rabbitmq
    restart: on-failure

  react-app-service:
    build: './bike_weather_dashboard_service'
    ports:
      - "3000:3000"
    networks:
      - app-network
    depends_on:
      - consul
      - rabbitmq
    volumes:
      - react_data:/usr/src/app
    restart: on-failure

volumes:
  mongo_data:
  rabbitmq_data:
  rabbitmq_log:
  react_data:

networks:
  app-network:
    driver: bridge

